// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LinuxWorker.proto

package LinuxWorkerPb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartRequest struct {
	//path of a program or executable
	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	//arguments to invoke program or executable with
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// environment variables for the execution
	//OPTIONAL variable
	Env []string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	// current working directory of the execution
	//OPTIONAL variable, default will be the working directory of server
	Dir                  string   `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{0}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *StartRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *StartRequest) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *StartRequest) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

type StartResponse struct {
	//process Id of the running process executed by the command
	//will be 0 if process failed to execute
	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	//univeral unique identifier that tags each unique request made to server
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//starting time of start request
	StartingTimeStamp    string   `protobuf:"bytes,3,opt,name=startingTimeStamp,proto3" json:"startingTimeStamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartResponse) Reset()         { *m = StartResponse{} }
func (m *StartResponse) String() string { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()    {}
func (*StartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{1}
}

func (m *StartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResponse.Unmarshal(m, b)
}
func (m *StartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResponse.Marshal(b, m, deterministic)
}
func (m *StartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResponse.Merge(m, src)
}
func (m *StartResponse) XXX_Size() int {
	return xxx_messageInfo_StartResponse.Size(m)
}
func (m *StartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartResponse proto.InternalMessageInfo

func (m *StartResponse) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *StartResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *StartResponse) GetStartingTimeStamp() string {
	if m != nil {
		return m.StartingTimeStamp
	}
	return ""
}

type StopRequest struct {
	Pid                  int32    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRequest) Reset()         { *m = StopRequest{} }
func (m *StopRequest) String() string { return proto.CompactTextString(m) }
func (*StopRequest) ProtoMessage()    {}
func (*StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{2}
}

func (m *StopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRequest.Unmarshal(m, b)
}
func (m *StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRequest.Marshal(b, m, deterministic)
}
func (m *StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRequest.Merge(m, src)
}
func (m *StopRequest) XXX_Size() int {
	return xxx_messageInfo_StopRequest.Size(m)
}
func (m *StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRequest proto.InternalMessageInfo

func (m *StopRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type StopResponse struct {
	Stdout               []byte   `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	IsKilled             bool     `protobuf:"varint,3,opt,name=isKilled,proto3" json:"isKilled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResponse) Reset()         { *m = StopResponse{} }
func (m *StopResponse) String() string { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()    {}
func (*StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{3}
}

func (m *StopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResponse.Unmarshal(m, b)
}
func (m *StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResponse.Marshal(b, m, deterministic)
}
func (m *StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResponse.Merge(m, src)
}
func (m *StopResponse) XXX_Size() int {
	return xxx_messageInfo_StopResponse.Size(m)
}
func (m *StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopResponse proto.InternalMessageInfo

func (m *StopResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *StopResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *StopResponse) GetIsKilled() bool {
	if m != nil {
		return m.IsKilled
	}
	return false
}

type ProcessInfo struct {
	Pid                  int32    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	StartingTimeStamp    string   `protobuf:"bytes,2,opt,name=startingTimeStamp,proto3" json:"startingTimeStamp,omitempty"`
	EndTimeStamp         string   `protobuf:"bytes,3,opt,name=endTimeStamp,proto3" json:"endTimeStamp,omitempty"`
	ProcessName          string   `protobuf:"bytes,4,opt,name=processName,proto3" json:"processName,omitempty"`
	Uuid                 string   `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IsRunning            bool     `protobuf:"varint,6,opt,name=isRunning,proto3" json:"isRunning,omitempty"`
	ExitCode             int32    `protobuf:"varint,7,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessInfo) Reset()         { *m = ProcessInfo{} }
func (m *ProcessInfo) String() string { return proto.CompactTextString(m) }
func (*ProcessInfo) ProtoMessage()    {}
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{4}
}

func (m *ProcessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessInfo.Unmarshal(m, b)
}
func (m *ProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessInfo.Marshal(b, m, deterministic)
}
func (m *ProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessInfo.Merge(m, src)
}
func (m *ProcessInfo) XXX_Size() int {
	return xxx_messageInfo_ProcessInfo.Size(m)
}
func (m *ProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessInfo proto.InternalMessageInfo

func (m *ProcessInfo) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ProcessInfo) GetStartingTimeStamp() string {
	if m != nil {
		return m.StartingTimeStamp
	}
	return ""
}

func (m *ProcessInfo) GetEndTimeStamp() string {
	if m != nil {
		return m.EndTimeStamp
	}
	return ""
}

func (m *ProcessInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *ProcessInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ProcessInfo) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

func (m *ProcessInfo) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

type QueryOneProcessRequest struct {
	Pid                  int32    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	StartingTimeStamp    string   `protobuf:"bytes,2,opt,name=startingTimeStamp,proto3" json:"startingTimeStamp,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryOneProcessRequest) Reset()         { *m = QueryOneProcessRequest{} }
func (m *QueryOneProcessRequest) String() string { return proto.CompactTextString(m) }
func (*QueryOneProcessRequest) ProtoMessage()    {}
func (*QueryOneProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{5}
}

func (m *QueryOneProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOneProcessRequest.Unmarshal(m, b)
}
func (m *QueryOneProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOneProcessRequest.Marshal(b, m, deterministic)
}
func (m *QueryOneProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOneProcessRequest.Merge(m, src)
}
func (m *QueryOneProcessRequest) XXX_Size() int {
	return xxx_messageInfo_QueryOneProcessRequest.Size(m)
}
func (m *QueryOneProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOneProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOneProcessRequest proto.InternalMessageInfo

func (m *QueryOneProcessRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *QueryOneProcessRequest) GetStartingTimeStamp() string {
	if m != nil {
		return m.StartingTimeStamp
	}
	return ""
}

func (m *QueryOneProcessRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type QueryOneProcessResponse struct {
	ProcInfo             *ProcessInfo `protobuf:"bytes,1,opt,name=procInfo,proto3" json:"procInfo,omitempty"`
	Stdout               []byte       `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte       `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryOneProcessResponse) Reset()         { *m = QueryOneProcessResponse{} }
func (m *QueryOneProcessResponse) String() string { return proto.CompactTextString(m) }
func (*QueryOneProcessResponse) ProtoMessage()    {}
func (*QueryOneProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{6}
}

func (m *QueryOneProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOneProcessResponse.Unmarshal(m, b)
}
func (m *QueryOneProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOneProcessResponse.Marshal(b, m, deterministic)
}
func (m *QueryOneProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOneProcessResponse.Merge(m, src)
}
func (m *QueryOneProcessResponse) XXX_Size() int {
	return xxx_messageInfo_QueryOneProcessResponse.Size(m)
}
func (m *QueryOneProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOneProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOneProcessResponse proto.InternalMessageInfo

func (m *QueryOneProcessResponse) GetProcInfo() *ProcessInfo {
	if m != nil {
		return m.ProcInfo
	}
	return nil
}

func (m *QueryOneProcessResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *QueryOneProcessResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

type QueryRunningProcessesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRunningProcessesRequest) Reset()         { *m = QueryRunningProcessesRequest{} }
func (m *QueryRunningProcessesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRunningProcessesRequest) ProtoMessage()    {}
func (*QueryRunningProcessesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{7}
}

func (m *QueryRunningProcessesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRunningProcessesRequest.Unmarshal(m, b)
}
func (m *QueryRunningProcessesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRunningProcessesRequest.Marshal(b, m, deterministic)
}
func (m *QueryRunningProcessesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRunningProcessesRequest.Merge(m, src)
}
func (m *QueryRunningProcessesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRunningProcessesRequest.Size(m)
}
func (m *QueryRunningProcessesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRunningProcessesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRunningProcessesRequest proto.InternalMessageInfo

type QueryRunningProcessesResponse struct {
	ProcessTable         []*ProcessInfo `protobuf:"bytes,1,rep,name=processTable,proto3" json:"processTable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryRunningProcessesResponse) Reset()         { *m = QueryRunningProcessesResponse{} }
func (m *QueryRunningProcessesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRunningProcessesResponse) ProtoMessage()    {}
func (*QueryRunningProcessesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d96209d9625940c, []int{8}
}

func (m *QueryRunningProcessesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRunningProcessesResponse.Unmarshal(m, b)
}
func (m *QueryRunningProcessesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRunningProcessesResponse.Marshal(b, m, deterministic)
}
func (m *QueryRunningProcessesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRunningProcessesResponse.Merge(m, src)
}
func (m *QueryRunningProcessesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryRunningProcessesResponse.Size(m)
}
func (m *QueryRunningProcessesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRunningProcessesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRunningProcessesResponse proto.InternalMessageInfo

func (m *QueryRunningProcessesResponse) GetProcessTable() []*ProcessInfo {
	if m != nil {
		return m.ProcessTable
	}
	return nil
}

func init() {
	proto.RegisterType((*StartRequest)(nil), "linuxWorker.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "linuxWorker.StartResponse")
	proto.RegisterType((*StopRequest)(nil), "linuxWorker.StopRequest")
	proto.RegisterType((*StopResponse)(nil), "linuxWorker.StopResponse")
	proto.RegisterType((*ProcessInfo)(nil), "linuxWorker.ProcessInfo")
	proto.RegisterType((*QueryOneProcessRequest)(nil), "linuxWorker.QueryOneProcessRequest")
	proto.RegisterType((*QueryOneProcessResponse)(nil), "linuxWorker.QueryOneProcessResponse")
	proto.RegisterType((*QueryRunningProcessesRequest)(nil), "linuxWorker.QueryRunningProcessesRequest")
	proto.RegisterType((*QueryRunningProcessesResponse)(nil), "linuxWorker.QueryRunningProcessesResponse")
}

func init() { proto.RegisterFile("LinuxWorker.proto", fileDescriptor_1d96209d9625940c) }

var fileDescriptor_1d96209d9625940c = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0xa5, 0xcd, 0x7e, 0xb4, 0x93, 0xac, 0x60, 0x7d, 0x28, 0xde, 0xa8, 0x40, 0x65, 0x38, 0x2c,
	0x08, 0xf5, 0xb0, 0x70, 0xe4, 0xc4, 0x87, 0x10, 0x02, 0xc1, 0x92, 0xae, 0x84, 0xb4, 0x12, 0x12,
	0x69, 0x33, 0x54, 0x16, 0xad, 0x1d, 0x6c, 0x67, 0x29, 0x27, 0x7e, 0x2b, 0x3f, 0x04, 0x09, 0xd9,
	0x75, 0xd3, 0xb4, 0x4d, 0x56, 0x70, 0x1b, 0x8f, 0x9f, 0x67, 0xde, 0x9b, 0x97, 0x09, 0x1c, 0xbf,
	0xe3, 0xa2, 0x58, 0x7c, 0x92, 0xea, 0x1b, 0xaa, 0x61, 0xae, 0xa4, 0x91, 0x24, 0x9c, 0xad, 0x53,
	0xec, 0x0b, 0x44, 0x23, 0x93, 0x2a, 0x93, 0xe0, 0xf7, 0x02, 0xb5, 0x21, 0x14, 0x0e, 0x27, 0x72,
	0x3e, 0x4f, 0x45, 0x46, 0x5b, 0x83, 0xd6, 0x69, 0x37, 0x59, 0x1d, 0x09, 0x81, 0xbd, 0x54, 0x4d,
	0x35, 0x6d, 0x0f, 0x82, 0xd3, 0x6e, 0xe2, 0x62, 0x72, 0x0b, 0x02, 0x14, 0x57, 0x34, 0x70, 0x29,
	0x1b, 0xda, 0x4c, 0xc6, 0x15, 0xdd, 0x73, 0x6f, 0x6d, 0xc8, 0x26, 0x70, 0xe4, 0x3b, 0xe8, 0x5c,
	0x0a, 0x8d, 0x16, 0x92, 0xf3, 0x65, 0xf9, 0xfd, 0xc4, 0x86, 0xb6, 0x74, 0x51, 0xf0, 0x8c, 0xb6,
	0xdd, 0x2b, 0x17, 0x93, 0xc7, 0x70, 0xac, 0xed, 0x33, 0x2e, 0xa6, 0x17, 0x7c, 0x8e, 0x23, 0x93,
	0xce, 0x73, 0x1a, 0x38, 0xc0, 0xee, 0x05, 0xbb, 0x07, 0xe1, 0xc8, 0xc8, 0x7c, 0xa5, 0x62, 0xa7,
	0x05, 0xbb, 0xb4, 0x3a, 0x2d, 0xc0, 0x93, 0xe8, 0xc1, 0x81, 0x36, 0x99, 0x2c, 0x8c, 0x03, 0x45,
	0x89, 0x3f, 0xf9, 0x3c, 0x2a, 0xe5, 0xc8, 0x2c, 0xf3, 0xa8, 0x14, 0x89, 0xa1, 0xc3, 0xf5, 0x5b,
	0x3e, 0x9b, 0x61, 0xe6, 0x58, 0x74, 0x92, 0xf2, 0xcc, 0x7e, 0xb7, 0x20, 0x3c, 0x57, 0x72, 0x82,
	0x5a, 0xbf, 0x11, 0x5f, 0x65, 0x8d, 0xc0, 0x5a, 0x31, 0xed, 0x06, 0x31, 0x84, 0x41, 0x84, 0x22,
	0xdb, 0x56, 0xbd, 0x91, 0x23, 0x03, 0x08, 0xf3, 0x65, 0xcb, 0xf7, 0xe9, 0x1c, 0xfd, 0xbc, 0xab,
	0xa9, 0x72, 0xa8, 0xfb, 0x95, 0xa1, 0xf6, 0xa1, 0xcb, 0x75, 0x52, 0x08, 0xc1, 0xc5, 0x94, 0x1e,
	0x38, 0x19, 0xeb, 0x84, 0xd5, 0x88, 0x0b, 0x6e, 0x5e, 0xc8, 0x0c, 0xe9, 0xa1, 0x23, 0x5f, 0x9e,
	0xd9, 0x0c, 0x7a, 0x1f, 0x0b, 0x54, 0x3f, 0x3f, 0x08, 0xf4, 0x52, 0x1b, 0x67, 0xfd, 0x9f, 0x6a,
	0x57, 0x3c, 0x83, 0x35, 0x4f, 0xf6, 0x0b, 0x6e, 0xef, 0x74, 0xf3, 0xc6, 0x3d, 0x85, 0x8e, 0x55,
	0x69, 0x07, 0xed, 0x7a, 0x86, 0x67, 0x74, 0x58, 0xf9, 0xa0, 0x87, 0x15, 0x23, 0x92, 0x12, 0x59,
	0xb1, 0xbb, 0xdd, 0x60, 0x77, 0x50, 0xb5, 0x9b, 0xdd, 0x85, 0xbe, 0x23, 0xe0, 0x47, 0xe3, 0x8b,
	0xe2, 0x4a, 0x34, 0xfb, 0x0c, 0x77, 0x1a, 0xee, 0x3d, 0xcd, 0x67, 0x10, 0x79, 0x33, 0x2e, 0xd2,
	0xf1, 0x0c, 0x69, 0x6b, 0x10, 0x5c, 0x4b, 0x75, 0x03, 0x7d, 0xf6, 0xa7, 0x0d, 0x91, 0x5b, 0xdc,
	0x11, 0xaa, 0x2b, 0x3e, 0x41, 0xf2, 0x1a, 0xa2, 0x57, 0x0b, 0x9c, 0x14, 0x06, 0xdd, 0x2e, 0x91,
	0x93, 0x8d, 0x42, 0xd5, 0x0d, 0x8e, 0xe3, 0xba, 0xab, 0x25, 0x2b, 0x76, 0x83, 0xbc, 0x84, 0xb0,
	0x2c, 0x24, 0x73, 0x42, 0xb7, 0xc0, 0xe5, 0x0a, 0xc5, 0x27, 0x35, 0x37, 0x65, 0x15, 0x84, 0x9e,
	0xaf, 0xb2, 0x65, 0x13, 0xb9, 0xbf, 0xf1, 0xac, 0xfe, 0x93, 0x89, 0x1f, 0x5c, 0x0f, 0x2a, 0xdb,
	0xfc, 0x80, 0x7e, 0xb5, 0xcd, 0xf6, 0xb0, 0xc9, 0xc3, 0xdd, 0x3a, 0x0d, 0x86, 0xc5, 0x8f, 0xfe,
	0x05, 0xba, 0x6a, 0xfc, 0xfc, 0xe6, 0xe5, 0x51, 0xe5, 0xbf, 0x79, 0x3e, 0x1e, 0x1f, 0xb8, 0x5f,
	0xe7, 0x93, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x51, 0x41, 0xee, 0xd9, 0x4f, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinuxServiceClient is the client API for LinuxService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinuxServiceClient interface {
	ExecuteStart(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error)
	ExecuteStop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error)
	ExecuteQueryOneProcess(ctx context.Context, in *QueryOneProcessRequest, opts ...grpc.CallOption) (*QueryOneProcessResponse, error)
	ExecuteQueryRunningProcesses(ctx context.Context, in *QueryRunningProcessesRequest, opts ...grpc.CallOption) (*QueryRunningProcessesResponse, error)
}

type linuxServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLinuxServiceClient(cc grpc.ClientConnInterface) LinuxServiceClient {
	return &linuxServiceClient{cc}
}

func (c *linuxServiceClient) ExecuteStart(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartResponse, error) {
	out := new(StartResponse)
	err := c.cc.Invoke(ctx, "/linuxWorker.LinuxService/ExecuteStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linuxServiceClient) ExecuteStop(ctx context.Context, in *StopRequest, opts ...grpc.CallOption) (*StopResponse, error) {
	out := new(StopResponse)
	err := c.cc.Invoke(ctx, "/linuxWorker.LinuxService/ExecuteStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linuxServiceClient) ExecuteQueryOneProcess(ctx context.Context, in *QueryOneProcessRequest, opts ...grpc.CallOption) (*QueryOneProcessResponse, error) {
	out := new(QueryOneProcessResponse)
	err := c.cc.Invoke(ctx, "/linuxWorker.LinuxService/ExecuteQueryOneProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linuxServiceClient) ExecuteQueryRunningProcesses(ctx context.Context, in *QueryRunningProcessesRequest, opts ...grpc.CallOption) (*QueryRunningProcessesResponse, error) {
	out := new(QueryRunningProcessesResponse)
	err := c.cc.Invoke(ctx, "/linuxWorker.LinuxService/ExecuteQueryRunningProcesses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinuxServiceServer is the server API for LinuxService service.
type LinuxServiceServer interface {
	ExecuteStart(context.Context, *StartRequest) (*StartResponse, error)
	ExecuteStop(context.Context, *StopRequest) (*StopResponse, error)
	ExecuteQueryOneProcess(context.Context, *QueryOneProcessRequest) (*QueryOneProcessResponse, error)
	ExecuteQueryRunningProcesses(context.Context, *QueryRunningProcessesRequest) (*QueryRunningProcessesResponse, error)
}

// UnimplementedLinuxServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLinuxServiceServer struct {
}

func (*UnimplementedLinuxServiceServer) ExecuteStart(ctx context.Context, req *StartRequest) (*StartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteStart not implemented")
}
func (*UnimplementedLinuxServiceServer) ExecuteStop(ctx context.Context, req *StopRequest) (*StopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteStop not implemented")
}
func (*UnimplementedLinuxServiceServer) ExecuteQueryOneProcess(ctx context.Context, req *QueryOneProcessRequest) (*QueryOneProcessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteQueryOneProcess not implemented")
}
func (*UnimplementedLinuxServiceServer) ExecuteQueryRunningProcesses(ctx context.Context, req *QueryRunningProcessesRequest) (*QueryRunningProcessesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteQueryRunningProcesses not implemented")
}

func RegisterLinuxServiceServer(s *grpc.Server, srv LinuxServiceServer) {
	s.RegisterService(&_LinuxService_serviceDesc, srv)
}

func _LinuxService_ExecuteStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinuxServiceServer).ExecuteStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linuxWorker.LinuxService/ExecuteStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinuxServiceServer).ExecuteStart(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinuxService_ExecuteStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinuxServiceServer).ExecuteStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linuxWorker.LinuxService/ExecuteStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinuxServiceServer).ExecuteStop(ctx, req.(*StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinuxService_ExecuteQueryOneProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryOneProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinuxServiceServer).ExecuteQueryOneProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linuxWorker.LinuxService/ExecuteQueryOneProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinuxServiceServer).ExecuteQueryOneProcess(ctx, req.(*QueryOneProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinuxService_ExecuteQueryRunningProcesses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRunningProcessesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinuxServiceServer).ExecuteQueryRunningProcesses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linuxWorker.LinuxService/ExecuteQueryRunningProcesses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinuxServiceServer).ExecuteQueryRunningProcesses(ctx, req.(*QueryRunningProcessesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinuxService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "linuxWorker.LinuxService",
	HandlerType: (*LinuxServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteStart",
			Handler:    _LinuxService_ExecuteStart_Handler,
		},
		{
			MethodName: "ExecuteStop",
			Handler:    _LinuxService_ExecuteStop_Handler,
		},
		{
			MethodName: "ExecuteQueryOneProcess",
			Handler:    _LinuxService_ExecuteQueryOneProcess_Handler,
		},
		{
			MethodName: "ExecuteQueryRunningProcesses",
			Handler:    _LinuxService_ExecuteQueryRunningProcesses_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "LinuxWorker.proto",
}
